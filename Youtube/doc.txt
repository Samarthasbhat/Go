- boolean are not convertible to/from integers
- error  may be nil or non-nil
- pointer may be nil or non-nil
- no pointer manipulation except through package "unsafe"
- Pointer are physically addresses, logically opaque
- Constants are immutable "const"
- byte: synonym for uint8
- rune: a synonym for int32 for characters
- string : an immutable sequence of "characters"
- we cannot change a part of string s[5] = 'a'
- strings inbuilt func : strings.Contains(), strings.HasPrefix(), strings.Index()
- map[string]int : map[Key type] value type
- Array are typed by size, which is fixed at compile time
- Arrays are passed by value, so we can copy(e := a) value And slice is vice versa(updating OK)
- Slice are indexed like, [8:11]
- Variable length it is used in the most cases
- Slice are Not comparable and not used by map
- Maps are Dictionaries, p:= make(map[string]int) // non-nil but empty
- Nil is a type of zero: it indicates the absence of something
- Every name that's capitalized is exported
- A package "A" cannot import a package that imports A (package B import "A" //WRONG)
- Items within a package get initialized before main
- short declaration(:=) operations it least one "new variable"
- 